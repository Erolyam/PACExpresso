var fs = require('fs'),
  path = require('path'),
  Replace;

Replace = function(fileName, staticRoot) {
  this.fileName = fileName;
  this.staticRoot = staticRoot;
  this.rootFull = /* process.cwd() + path.sep + */ staticRoot;

};

Replace.prototype.run = function() {
  var fileName = this.fileName,
    staticRoot = this.staticRoot,
    rootFull   = this.rootFull,
    data;
/*
  if (fs.existsSync(fileName)) {
console.log(fileName, staticRoot);
    data = fs.readFileSync(fileName).toString();
    if (data && staticRoot) {
      return data.replace(/url\s*\(\s*(['"]?)([^?#"'\)]*)\1\s*\)/gi, function(match, location) {console.log("  m:",match);//GB
        var dirName = path.resolve(path.dirname(fileName)),
          url,
          urlPath;console.log("    dirName", dirName);//GB
dirName = path.relative('/home/gilles/web/eccand/public/compiled', dirName);console.log("    dirName", dirName);//GB
        match = match.replace(/\s/g, '');
        url = match.slice(4, -1).replace(/"|'/g, '');
        if (/^\/|https:|http:/i.test(url) === false && dirName.indexOf(staticRoot) > -1) {
          urlPath = path.resolve(dirName + '/' + url);console.log("    urlPath", urlPath);//GB
          if (urlPath.indexOf(staticRoot) > -1) {
            url = urlPath.substr(urlPath.indexOf(staticRoot) + staticRoot.length);
          }
        }

        return 'url("' + url + '")';
      });
    }

    return data;
  }
*/

  if (fs.existsSync(fileName)) {
//console.log("file=", fileName, "rootFull=", rootFull);
    data = fs.readFileSync(fileName).toString();
    if (data && rootFull) {
      return data.replace(/url\s*\(\s*(['"]?)([^?#"'\)]*)\1\s*\)/gi, function(match, location) {
        var url, dirName;
        match = match.replace(/\s/g, '');
        url = match.slice(4, -1).replace(/"|'/g, '');
        if (/^\/|https:|http:|data:/i.test(url) !== false) {
          return match; // No change
        }
//console.log("  match:", match, "url:",url);//GB
dirName = path.dirname(fileName) + path.sep + url;
//console.log("    dirName from", dirName);//GB
url = path.relative(rootFull, dirName);
//console.log("    dirName   to", url);//GB

        return 'url("' + url + '")';
      });
    }

    return data;
  }

  return '';
};

module.exports = Replace;
